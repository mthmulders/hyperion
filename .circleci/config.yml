version: 2
jobs:
  build:

    docker:
      - image: circleci/openjdk:8-jdk
      - image: circleci/postgres:9.3-alpine
        environment:
          PGDATA: /dev/shm/pgdata/data
          POSTGRES_USER: circleci
          POSTGRES_DB: circle_test

    steps:
      - checkout

      - restore_cache:
          key: hyperion-{{ .Branch }}-{{ checksum "build.sbt" }}

      - run:
          name: Install build dependencies
          command: |
            sudo apt-get update
            sudo apt install -y postgresql-client fakeroot
      - run:
          name: Install dockerize
          command: |
            wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.5.0
      - run:
          name: Install Sonar Scanner
          command: |
            mkdir -p ~/tools
            pushd ~/tools
            wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
            unzip -qo sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
            popd
          environment:
            SONAR_SCANNER_VERSION: 3.2.0.1227
      - run:
          name: Wait for database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Create PostgreSQL schema
          command: psql -h localhost -p 5432 -f scripts/database/schema.sql circle_test
      - run:
          name: Prepare data for integration tests
          command: psql -h localhost -p 5432 -f scripts/database/test-data.sql circle_test
      - run:
          name: Run tests (with coverage)
          environment:
            SBT_OPTS: -Xms512m -Xmx3G
          # Specify different config file, see https://stackoverflow.com/a/21433585
          command: |
            sbt -Dconfig.file=.circleci/environment.conf coverage test
            sbt coverageAggregate


      - save_cache:
          paths:
            - ~/.sbt
            - ./.ivy2
            - ~/.coursier
            - ~/tools
          key: hyperion-{{ .Branch }}-{{ checksum "build.sbt" }}

      - run:
          name: Run code analysis
          environment:
            SBT_OPTS: -Xms512m -Xmx3G
            SONAR_SCANNER_HOME: /home/circleci/tools/sonar-scanner-3.2.0.1227-linux
          command: |
            sbt coverageReport scapegoat
            if [ -z "{CI_PULL_REQUEST:-}" ]; then
              sbt -Dsonar.login=$SONAR_LOGIN -Dsonar.pullrequest.branch=$CIRCLE_BRANCH sonarScan
            else
              sbt -Dsonar.login=$SONAR_LOGIN sonarScan
            fi
            

      - run:
          name: Run integration tests
          command: sbt -Dconfig.file=.circleci/environment.conf integrationTest/test

      - run:
          name: Create Debian packages
          environment:
            SBT_OPTS: -Xms512m -Xmx3G
          command: sbt debian:packageBin

      - run:
          name: Prepare archival of packages
          command: |
            mkdir -p app/target/native/debian
            mv app/target/*.deb app/target/native/debian/

      - store_test_results:
          path: "app/target/test-reports/"
      - store_artifacts:
          destination: "test-reports/unit-test"
          path: "app/target/test-reports/"
      - store_test_results:
          path: "integration-test/target/test-reports/"
      - store_artifacts:
          destination: "test-reports/integration-test"
          path: "integration-test/target/test-reports/"
      - store_artifacts:
          destination: "packages/debian"
          path: "app/target/native/debian"

  mutation-testing:

    docker:
      - image: circleci/openjdk:8-jdk
      - image: circleci/postgres:9.3-alpine
        environment:
          PGDATA: /dev/shm/pgdata/data
          POSTGRES_USER: circleci
          POSTGRES_DB: circle_test

    steps:
      - checkout

      - restore_cache:
          key: hyperion-{{ .Branch }}-{{ checksum "build.sbt" }}

      - run:
          name: Install build dependencies
          command: |
            sudo apt-get update
            sudo apt install -y postgresql-client fakeroot
      - run:
          name: Install dockerize
          command: |
            wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
            rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.5.0
      - run:
          name: Wait for database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create PostgreSQL schema
          command: psql -h localhost -p 5432 -f scripts/database/schema.sql circle_test
      - run:
          name: Prepare data for integration tests
          command: psql -h localhost -p 5432 -f scripts/database/test-data.sql circle_test

      - run:
          name: Perform mutation testing
          command: |
            export SBT_OPTS="-XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=4G -Xmx4G"
            sbt -Dconfig.file=../.circleci/environment.conf "project app" stryker


workflows:
  version: 2
  build:
    jobs:
      - build
  mutation-testing:
    triggers:
      - schedule:
          cron: "14 3 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - mutation-testing

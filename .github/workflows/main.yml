name: Main workflow

on: [push, pull_request]

env:
  SONAR_SCANNER_VERSION: "3.2.0.1227"

jobs:
  build:
    runs-on: ubuntu-latest
    container: node:10.18-jessie

    services:
      postgres:
        image: postgres:9.3
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: hyperion
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Set up cache for SBT
        uses: actions/cache@v2.1.5
        with:
          path: |
            ~/.sbt
            ./.ivy2
            ~/.coursier
            ~/tools
          key: hyperion-{{ checksum "build.sbt" }}
          restore-keys: |
            hyperion-

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'
          check-latest: true
      
      - name: Download SBT
        run: |
          cd /tmp
          curl -L -o sbt-${SBT_VERSION}.tgz https://github.com/sbt/sbt/releases/download/v${SBT_VERSION}/sbt-${SBT_VERSION}.tgz
          tar -xzf sbt-${SBT_VERSION}.tgz
        env:
          SBT_VERSION: 1.5.0

      - name: Install Sonar Scanner
        run: |
          mkdir -p ~/tools
          cd ~/tools
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
          unzip -qo sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
        if: ${{ github.ref == 'master' }}

      - name: Populate database
        run: |
          apt-get update
          apt-get install -y postgresql-client-9.4
          psql -h postgres -p 5432 -f scripts/database/schema.sql hyperion
          psql -h postgres -p 5432 -f scripts/database/test-data.sql hyperion
        env:
          PGUSER: postgres
          PGPASSWORD: postgres
        
      - name: Run tests (with coverage)
        run: |
          /tmp/sbt/bin/sbt -Dconfig.file=.github/environment.conf coverage test
          /tmp/sbt/bin/sbt coverageAggregate

      - name: Upload application
        uses: actions/upload-artifact@v2
        if: github.ref == 'refs/heads/master'
        with:
          name: hyperion.deb
          path: app/target/*.deb

      - name: Run code analysis
        run: |
          /tmp/sbt/bin/sbt coverageReport scapegoat

          PR_KEY=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          if [ -z "${PULL_REQUEST:-}" ]; then
            /tmp/sbt/bin/sbt -Dsonar.login=$SONAR_LOGIN sonarScan
          else
            /tmp/sbt/bin/sbt -Dsonar.login=$SONAR_LOGIN -Dsonar.pullrequest.branch=$GIT_BRANCH -Dsonar.pullrequest.key=$PR_KEY sonarScan
          fi
        env:
          SBT_OPTS: -Xms512m -Xmx3G
          SONAR_SCANNER_HOME: ~/tools/sonar-scanner-3.2.0.1227-linux
          SONAR_LOGIN: ${{ secrets.SONAR_LOGIN }}
          GIT_BRANCH: ${{ github.ref }}
          PULL_REQUEST: ${{ github.head_ref }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ github.ref == 'master' }}
